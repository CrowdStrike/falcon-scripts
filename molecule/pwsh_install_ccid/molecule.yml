---
dependency:
  name: galaxy
driver:
  name: ec2
# The Default Platform is Windows Server 2022 | T3a.Medium | us-west-2
platforms:
  - name: "${MOLECULE_INSTANCE_NAME:-default-pwsh-install-ccid}"
    image_owner: "${MOLECULE_IMAGE_OWNER:-801119661308}"
    image_filters:
      - architecture: "${MOLECULE_IMAGE_ARCH:-x86_64}"
      - name: "${MOLECULE_IMAGE_NAME:-Windows_Server-2022-English-Full-Base-*}"
    instance_type: "${MOLECULE_INSTANCE_TYPE:-t3a.medium}"
    region: "${MOLECULE_REGION:-us-west-2}"
    vpc_subnet_id: "${MOLECULE_VPC_SUBNET_ID}"
    key_inject_method: ec2
    security_group_restrict_cidr_ip: "${MOLECULE_SECURITY_GROUP_RESTRICT_CIDR_IP:-true}"
    boot_wait_seconds: ${MOLECULE_BOOT_WAIT_SECONDS:-120}
    connection_options:
      sudo: False
      ansible_user: Administrator
      ansible_port: 5986
      ansible_connection: winrm
      ansible_winrm_scheme: https
      ansible_winrm_server_cert_validation: ignore
provisioner:
  name: ansible
  config_options:
    defaults:
      stdout_callback: yaml
  playbooks:
    create: ../shared/playbooks/win_create.yml
    destroy: ../shared/playbooks/destroy.yml
    verify: ../shared/playbooks/win_verify.yml
scenario:
  test_sequence:
    - dependency
    - syntax
    - create
    - prepare
    - converge
    - side_effect
    - verify
    - destroy
